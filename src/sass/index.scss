@import "mixins";
@import "functions";

$primary-color: rgb(28, 168, 28);
$secondary-color: rgb(2, 1, 11);
$highlight-color: rgb(80, 255, 5);
$accent-color: rgb(255, 214, 29);
$background-color: rgba(0, 0, 0, 0.5);
$text-color: white;
$border-color: black;
$button-hover-color: black;
$correct-color: green;
$wrong-color: red;
$max-content-width: 600px;
$max-mobile-width: 450px;

body {
  background: linear-gradient(to top, $primary-color, 40%, $secondary-color);
  height: 100vh;
}

.App {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;

  .header {
    text-align: center;

    .title {
      background: linear-gradient($highlight-color 30%, $accent-color 65%);
      background-clip: text;
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      font-family: Lobster, sans-serif;
      margin: 1em 0.5em;
      font-size: 3em;
    }
  }

  .main-content {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: $max-content-width;
    margin: auto;
    border-radius: 5px;
    color: $text-color;
    background: $background-color;
    padding: 1em;

    .image {
      height: 400px;
      width: $max-content-width;
      border-radius: 5px;
      border: solid 2px $border-color;
      margin-bottom: 1em;
    }

    .question {
      font-size: 1.5rem;
      margin: 1em;
      text-align: center;

      .underline {
        text-decoration: underline;
      }
    }

    .buttons {
      height: 100px;
      width: 400px;
      display: grid;
      grid-template-columns: repeat(2, auto);
      gap: 10px;

      .question-btn {
        font-size: 1rem;
        transition: 0.5s;
        background-color: transparent;
        color: $text-color;
        border: 2px solid $text-color;
        border-radius: 5px;
        padding: 0.5em;
        cursor: pointer;

        @include button-hover(
          $button-hover-color
        ); // Using the 'button-hover' mixin

        &:disabled {
          cursor: not-allowed;
        }

        &.correct {
          background-color: $correct-color;
        }

        &.wrong {
          background-color: $wrong-color;
        }
      }
    }

    .start-btn,
    .next-btn {
      margin-top: 1em;
      margin-bottom: 1em;
      width: 120px;
      height: 50px;
      border: solid 2px $border-color;
      border-radius: 5px;
      font-size: 1rem;

      &:hover {
        border: solid 3px $border-color;
      }
    }

    button:hover {
      border: solid 2px $border-color;
    }

    .score {
      margin: 15px;
      font-size: 2rem;
    }

    .hide {
      display: none;
    }

    .sub-header {
      margin: 1em;
    }

    .para-text {
      font-size: 1.5rem;
      margin: 0.5em 1em;
      color: darken-color(
        $text-color,
        20%
      ); // Using the 'darken-color' function
    }

    .animation-win {
      @include flex-center; // Using the 'flex-center' mixin
      position: relative;
      border: solid 1px $border-color;
      border-radius: 100px;
      width: 300px;
      margin-top: 0.5em;
      text-align: center;
      font-size: 3rem;
      text-transform: uppercase;
      color: black;
      animation-name: win;
      animation-duration: 1.5s;
      animation-iteration-count: infinite;
    }

    .you-lost {
      border: solid 1px $border-color;
      background-color: $wrong-color;
      border-radius: 100px;
      width: 300px;
      margin-top: 0.5em;
      margin: auto;
      text-align: center;
      font-size: 3rem;
      text-transform: uppercase;
    }
  }

  @keyframes win {
    0% {
      background-color: lighten-color(
        $background-color,
        30%
      ); // Using the 'lighten-color' function
    }
    50% {
      background-color: lighten-color(
        $background-color,
        10%
      ); // Using the 'lighten-color' function
      color: lighten-color(
        $text-color,
        10%
      ); // Using the 'lighten-color' function
    }
    100% {
      background-color: lighten-color(
        $background-color,
        30%
      ); // Using the 'lighten-color' function
    }
  }

  @media screen and (max-width: 550px) {
    .main-content {
      width: $max-mobile-width;

      .image {
        width: $max-mobile-width;
      }
    }
  }
}
